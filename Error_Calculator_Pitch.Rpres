Type-II Error Calculator
========================================================
author: Daniel Baquero
date: 2020 - May - 30
autosize: true

What is this APP?
========================================================

The App is a simple Type-II error calculator for the two-sided know variance case.
This is pretty simple. The app calculates the probability of not rejecting H_0 in the
case it is false. This can be seen in next page plot.  
Type-II error is the blue area.  
Type-II error is also know as beta.

Type-II Error Example
========================================================

```{r initialplot, echo=FALSE}
sigma <- 15    # theoretical standard deviation
mu0   <- 100   # expected value under H0
mu1   <- 130   # expected value under H1
alpha <- 0.05  # probability of type I error
crit <- qnorm(1-alpha, mu0, sigma)
pow <- pnorm(crit, mu1, sigma, lower.tail=FALSE)
beta <- 1-pow
xLims <- c(50, 180)
left  <- seq(xLims[1],   crit, length.out=100)
right <- seq(crit, xLims[2],   length.out=100)
yH0r  <- dnorm(right, mu0, sigma)
yH1l  <- dnorm(left,  mu1, sigma)
yH1r  <- dnorm(right, mu1, sigma)

curve(dnorm(x, mu0, sigma), xlim=xLims, lwd=2, col="red", xlab="x", ylab="density",
      main="Normal distribution under H0 and H1", ylim=c(0, 0.03), xaxs="i")
curve(dnorm(x, mu1, sigma), lwd=2, col="blue", add=TRUE)
polygon(c(right, rev(right)), c(yH0r, numeric(length(right))), border=NA,
        col=rgb(1, 0.3, 0.3, 0.6))
polygon(c(left,  rev(left)),  c(yH1l, numeric(length(left))),  border=NA,
        col=rgb(0.3, 0.3, 1, 0.6))
polygon(c(right, rev(right)), c(yH1r, numeric(length(right))), border=NA,
        density=5, lty=2, lwd=2, angle=45, col="darkgray")
abline(v=crit, lty=1, lwd=3, col="red")
text(crit+1,  0.03,  adj=0, label="critical value")
text(mu0-10,  0.025, adj=1, label="distribution under H0")
text(mu1+10,  0.025, adj=0, label="distribution under H1")
text(crit+8,  0.01,  adj=0, label="power", cex=1.3)
text(crit-12, 0.004,  expression(beta),  cex=1.3)
text(crit+5,  0.0015, expression(alpha), cex=1.3)
```

How It Works
========================================================

This works by calculating the probability of seeing a x_bar under the real populations distribution.  
For example,  
- Imagine an observed x_bar = 4 with n = 10.  
- Also, the population real variance is known. Sigma^2 = 0.5.  
- Additionally, we know that the population real mean is 3.  
- The test was done with an alpha = 0.05.  
- What is type-II error?

Example Result
========================================================

```{r answer}
        #First calculate the mean standard error
        n <- 10
        sigma <- sqrt(0.5)
        std_e <- sigma/sqrt(n)
        
        #Calculate bounds for non-rejection of null hypotesis
        alpha <- 0.05
        mu0 <- 4
        mu <- 3
        I <- c(alpha/2, 1 - alpha/2)
        q <- qnorm(I, mean = mu0, sd = std_e)
        
        #Calculate probabilities of type two error
        b1 <- pnorm(q[1], mu, sigma)
        b2 <- pnorm(q[2], mu, sigma)
        b <- b2 - b1
        b
```